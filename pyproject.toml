[build-system]
requires = ["setuptools >= 77.0.3"]
build-backend = "setuptools.build_meta"

[project]
name = "data_driven_quad_control"
version = "0.1.0"
authors = [
  { name = "Pável A. Campos-Peña", email = "pcamposp@uni.pe" }
]
description = "Data-driven control for drones in Genesis: data-driven MPC and reinforcement learning"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.10.0"
dependencies = [
  "genesis_world @ git+https://github.com/Genesis-Embodied-AI/Genesis@0c6fdd9",
  "numpy==2.2.6",
  "torch==2.7.0",
  "rsl-rl-lib==2.3.2",
  "tensorboard==2.19.0",
  "direct_data_driven_mpc @ git+https://github.com/pavelacamposp/direct_data_driven_mpc@7403b3a",
]
license = "MIT AND Apache-2.0"
license-files = ["LICEN[CS]E*"]
keywords = ["drone", "control-systems", "data-driven", "reinforcement-learning"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
]

[project.urls]
Homepage = "https://github.com/pavelacamposp/data_driven_quad_control.git"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.ruff]
line-length = 79
extend-exclude = ["__pycache__"]

[tool.ruff.lint]
extend-select = ["I", "D", "B", "C4", "E", "F", "W"]
ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D203",
  "D205",
  "D212",
  "D400",
  "D413",
  "D415",
]

[tool.mypy]
install_types = true
non_interactive = true
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
markers =[
  "integration: Marks all integration tests",
  "drone_env_integration: Integration tests for the main drone environment",
  "drone_utilities_integration: Integration tests for drone utilities",
  "drone_ctbr_controller_integration: Integration tests for drone CTBR controllers",
  "drone_track_controller_integration: Integration tests for drone tracking controllers",
  "dd_mpc_eval_integration: Integration tests for DDMPC controller evaluations",
  "dd_mpc_system_model_integration: Integration tests for DDMPC system model utility",
  "dd_mpc_gs_integration: Integration tests for DDMPC parameter grid search",
]

[tool.coverage.run]
# Ignore opencv-python created files
omit = [
  "config.py",
  "config-3.py",
]
